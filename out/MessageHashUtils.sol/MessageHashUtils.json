{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065e61bb3960bc3e03e153d75b025fb7a107a96875268a78cfe47125207f87a4a64736f6c63430008170033","sourceMap":"521:3235:74:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:74;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122065e61bb3960bc3e03e153d75b025fb7a107a96875268a78cfe47125207f87a4a64736f6c63430008170033","sourceMap":"521:3235:74:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":68499,"exportedSymbols":{"MessageHashUtils":[68498],"Strings":[67849]},"nodeType":"SourceUnit","src":"123:3634:74","nodes":[{"id":68426,"nodeType":"PragmaDirective","src":"123:24:74","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":68428,"nodeType":"ImportDirective","src":"149:39:74","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":68499,"sourceUnit":67850,"symbolAliases":[{"foreign":{"id":68427,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67849,"src":"157:7:74","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":68498,"nodeType":"ContractDefinition","src":"521:3235:74","nodes":[{"id":68439,"nodeType":"FunctionDefinition","src":"1222:460:74","nodes":[],"body":{"id":68438,"nodeType":"Block","src":"1314:368:74","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:74","nodeType":"YulBlock","src":"1376:300:74","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:74","nodeType":"YulLiteral","src":"1397:4:74","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:74","nodeType":"YulLiteral","src":"1403:34:74","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:74","nodeType":"YulIdentifier","src":"1390:6:74"},"nativeSrc":"1390:48:74","nodeType":"YulFunctionCall","src":"1390:48:74"},"nativeSrc":"1390:48:74","nodeType":"YulExpressionStatement","src":"1390:48:74"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:74","nodeType":"YulLiteral","src":"1499:4:74","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:74","nodeType":"YulIdentifier","src":"1505:11:74"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:74","nodeType":"YulIdentifier","src":"1492:6:74"},"nativeSrc":"1492:25:74","nodeType":"YulFunctionCall","src":"1492:25:74"},"nativeSrc":"1492:25:74","nodeType":"YulExpressionStatement","src":"1492:25:74"},{"nativeSrc":"1571:31:74","nodeType":"YulAssignment","src":"1571:31:74","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:74","nodeType":"YulLiteral","src":"1591:4:74","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:74","nodeType":"YulLiteral","src":"1597:4:74","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:74","nodeType":"YulIdentifier","src":"1581:9:74"},"nativeSrc":"1581:21:74","nodeType":"YulFunctionCall","src":"1581:21:74"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:74","nodeType":"YulIdentifier","src":"1571:6:74"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":68435,"isOffset":false,"isSlot":false,"src":"1571:6:74","valueSize":1},{"declaration":68432,"isOffset":false,"isSlot":false,"src":"1505:11:74","valueSize":1}],"id":68437,"nodeType":"InlineAssembly","src":"1367:309:74"}]},"documentation":{"id":68430,"nodeType":"StructuredDocumentation","src":"552:665:74","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:74","parameters":{"id":68433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68432,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:74","nodeType":"VariableDeclaration","scope":68439,"src":"1254:19:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:74"},"returnParameters":{"id":68436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68435,"mutability":"mutable","name":"digest","nameLocation":"1306:6:74","nodeType":"VariableDeclaration","scope":68439,"src":"1298:14:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:74"},"scope":68498,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":68465,"nodeType":"FunctionDefinition","src":"2148:229:74","nodes":[],"body":{"id":68464,"nodeType":"Block","src":"2234:143:74","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":68451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:74","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":68456,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68442,"src":"2343:7:74","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":68457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:74","memberName":"length","nodeType":"MemberAccess","src":"2343:14:74","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":68454,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67849,"src":"2326:7:74","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$67849_$","typeString":"type(library Strings)"}},"id":68455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:74","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":67662,"src":"2326:16:74","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":68458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":68453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:74","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":68452,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:74","typeDescriptions":{}}},"id":68459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":68460,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68442,"src":"2361:7:74","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":68449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:74","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":68448,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:74","typeDescriptions":{}}},"id":68450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:74","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:74","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":68461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":68447,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:74","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":68462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":68446,"id":68463,"nodeType":"Return","src":"2244:126:74"}]},"documentation":{"id":68440,"nodeType":"StructuredDocumentation","src":"1688:455:74","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:74","parameters":{"id":68443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68442,"mutability":"mutable","name":"message","nameLocation":"2193:7:74","nodeType":"VariableDeclaration","scope":68465,"src":"2180:20:74","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":68441,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:74","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:74"},"returnParameters":{"id":68446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68465,"src":"2225:7:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:74"},"scope":68498,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":68485,"nodeType":"FunctionDefinition","src":"2720:191:74","nodes":[],"body":{"id":68484,"nodeType":"Block","src":"2831:80:74","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":68478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:74","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":68479,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68468,"src":"2887:9:74","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":68480,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68470,"src":"2898:4:74","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":68476,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:74","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":68477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:74","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:74","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":68481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":68475,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:74","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":68482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:74","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":68474,"id":68483,"nodeType":"Return","src":"2841:63:74"}]},"documentation":{"id":68466,"nodeType":"StructuredDocumentation","src":"2383:332:74","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:74","parameters":{"id":68471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68468,"mutability":"mutable","name":"validator","nameLocation":"2769:9:74","nodeType":"VariableDeclaration","scope":68485,"src":"2761:17:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68467,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:74","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68470,"mutability":"mutable","name":"data","nameLocation":"2793:4:74","nodeType":"VariableDeclaration","scope":68485,"src":"2780:17:74","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":68469,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:74","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:74"},"returnParameters":{"id":68474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68485,"src":"2822:7:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:74"},"scope":68498,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":68497,"nodeType":"FunctionDefinition","src":"3353:401:74","nodes":[],"body":{"id":68496,"nodeType":"Block","src":"3462:292:74","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:74","nodeType":"YulBlock","src":"3524:224:74","statements":[{"nativeSrc":"3538:22:74","nodeType":"YulVariableDeclaration","src":"3538:22:74","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:74","nodeType":"YulLiteral","src":"3555:4:74","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:74","nodeType":"YulIdentifier","src":"3549:5:74"},"nativeSrc":"3549:11:74","nodeType":"YulFunctionCall","src":"3549:11:74"},"variables":[{"name":"ptr","nativeSrc":"3542:3:74","nodeType":"YulTypedName","src":"3542:3:74","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:74","nodeType":"YulIdentifier","src":"3580:3:74"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:74","nodeType":"YulLiteral","src":"3585:10:74","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:74","nodeType":"YulIdentifier","src":"3573:6:74"},"nativeSrc":"3573:23:74","nodeType":"YulFunctionCall","src":"3573:23:74"},"nativeSrc":"3573:23:74","nodeType":"YulExpressionStatement","src":"3573:23:74"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:74","nodeType":"YulIdentifier","src":"3620:3:74"},{"kind":"number","nativeSrc":"3625:4:74","nodeType":"YulLiteral","src":"3625:4:74","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:74","nodeType":"YulIdentifier","src":"3616:3:74"},"nativeSrc":"3616:14:74","nodeType":"YulFunctionCall","src":"3616:14:74"},{"name":"domainSeparator","nativeSrc":"3632:15:74","nodeType":"YulIdentifier","src":"3632:15:74"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:74","nodeType":"YulIdentifier","src":"3609:6:74"},"nativeSrc":"3609:39:74","nodeType":"YulFunctionCall","src":"3609:39:74"},"nativeSrc":"3609:39:74","nodeType":"YulExpressionStatement","src":"3609:39:74"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:74","nodeType":"YulIdentifier","src":"3672:3:74"},{"kind":"number","nativeSrc":"3677:4:74","nodeType":"YulLiteral","src":"3677:4:74","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:74","nodeType":"YulIdentifier","src":"3668:3:74"},"nativeSrc":"3668:14:74","nodeType":"YulFunctionCall","src":"3668:14:74"},{"name":"structHash","nativeSrc":"3684:10:74","nodeType":"YulIdentifier","src":"3684:10:74"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:74","nodeType":"YulIdentifier","src":"3661:6:74"},"nativeSrc":"3661:34:74","nodeType":"YulFunctionCall","src":"3661:34:74"},"nativeSrc":"3661:34:74","nodeType":"YulExpressionStatement","src":"3661:34:74"},{"nativeSrc":"3708:30:74","nodeType":"YulAssignment","src":"3708:30:74","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:74","nodeType":"YulIdentifier","src":"3728:3:74"},{"kind":"number","nativeSrc":"3733:4:74","nodeType":"YulLiteral","src":"3733:4:74","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:74","nodeType":"YulIdentifier","src":"3718:9:74"},"nativeSrc":"3718:20:74","nodeType":"YulFunctionCall","src":"3718:20:74"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:74","nodeType":"YulIdentifier","src":"3708:6:74"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":68493,"isOffset":false,"isSlot":false,"src":"3708:6:74","valueSize":1},{"declaration":68488,"isOffset":false,"isSlot":false,"src":"3632:15:74","valueSize":1},{"declaration":68490,"isOffset":false,"isSlot":false,"src":"3684:10:74","valueSize":1}],"id":68495,"nodeType":"InlineAssembly","src":"3515:233:74"}]},"documentation":{"id":68486,"nodeType":"StructuredDocumentation","src":"2917:431:74","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:74","parameters":{"id":68491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68488,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:74","nodeType":"VariableDeclaration","scope":68497,"src":"3378:23:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68490,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:74","nodeType":"VariableDeclaration","scope":68497,"src":"3403:18:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:74"},"returnParameters":{"id":68494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68493,"mutability":"mutable","name":"digest","nameLocation":"3454:6:74","nodeType":"VariableDeclaration","scope":68497,"src":"3446:14:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:74"},"scope":68498,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":68429,"nodeType":"StructuredDocumentation","src":"190:330:74","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[68498],"name":"MessageHashUtils","nameLocation":"529:16:74","scope":68499,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":74}